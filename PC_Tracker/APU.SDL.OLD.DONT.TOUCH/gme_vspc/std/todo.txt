Context Menu / Expanding Menu
-----------------------------
Draw the menu on a different SDL Surface, and then blit -- this is to avoid
crap happening when we draw on stuff below us .. hehehe

BRR Sample Watcher
------------------
After we "solo sample," track which channel(s) are using the sample and continuously
only solo those channels, if no channels are using it, then mute everything.


MIDI-IN
-------
Config menu
Specify Default Device
"Soft" pitch-bend range specifier
"Select Instrument"
There is a delay/latency/desync issue


EXPORT
=======
WAV Export
-----------
export .wavs of each individual channel all in one go
  . To do this, analyze Blargg's WAV export example from gme

SPC Export
----------
All SPC's should be exported with an ability to communicate with SNES
to reset back to Upload routine for ability for all tracks made with SNES Tracker
to be put into a playlist.


Instrument Thingy
-----------------
Graphical ADSR Envelope settings
-- Radio Buttons
-- Graphical ADSR waveform
Right-Click Context Menu
-- Download BRR, BRR+, BRRI

ALL
---
Import SPC

lots of things SHOULDN"T be done/updated if paused

Change run() to a function-pointer style and have a first_run() version of
the run function to better optimize speed, although size increase


DSP MAP
----------------
Export "GeneralDSP file"
Refactor DSP MAP
Put the Porttool and FilenameInfo into DSP MAP Display
Reduce Clickable_Text class in DSPMap to just SDL_Rect.. since that's all I'm using them for.. except for voice_title
Dir-was-used color highlighting like in memory view
--
--
"Sample/Instrument playback feature" -- backup SPC asm, Cause SPC to infinite loop, so that user
can play live samples from SPC as he/she pleases.. when done.. restore the SPC opcodes that were replaced with the
infinite loop.

Active Sample Ripping improvements -- Don't use relative BRR-end blocks anymore, reference the DIR/SRCN

Logical Coordinates System

Have a "Content section and Header section" like on a website
DSP Map



Strip Functional operation from Display operation in classes/structs.
Maybe i can subclass. struct Debugger_Voice_Control : public Voice_Control

Main Window
--------------
Gain slider and clipping notifier

Debugger Feature: Right click address that is being read/written and find out from where is the program accessing this memory.

Scrolling text at bottom-right when text is too long to read
If I click on "Time" I extend play-time by 1 min

--
Figuring out how to implement higher level audio algorithms..
like "pan from left to right over this course of this pattern for example"






Tracker features
-----------------
multiple effect columns

Custom FIR Filters (save to file)
add these FIR filters "Nintendo official"
0: 7F 00 00 00 00 00 00 00
1: 58 BF DB F0 FE 07 0C 0C
2: 0C 21 2B 2B 13 FE F3 F9
3: 34 33 00 D9 E5 01 FC EB
ones that I found: 
Super Metroid - Tension: 
4: 65 72 20 53 31 2e 32 30
Star Fox - Briefing (fast opening):
5: 80 ff 9a ff 67 ff 0f ff
Super Mario World:  (unused)
6: FF 08 17 24 24 17 08 FF

Optional:
---------




DISTANT SHIT
------------
SPC IMPORT -- Time signature detection
global instrument bank vs. song-only instrument bank
Song bank
